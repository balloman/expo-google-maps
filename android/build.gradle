apply plugin: 'com.android.library'

group = 'com.balloman.expo.googlemaps'
version = '1.0.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.

def useManagedAndroidSDKVersions = true

if (useManagedAndroidSDKVersions) {
    useDefaultAndroidSdkVersions()
} else {
    buildscript {
        // Simple helper that allows the root project to override versions declared by this library.
        ext.safeExtGet = { prop, fallback ->
            rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
        }
    }
    project.android {
        compileSdkVersion safeExtGet("compileSdkVersion", 34)
        defaultConfig {
            minSdkVersion safeExtGet("minSdkVersion", 23)
            targetSdkVersion safeExtGet("targetSdkVersion", 34)
        }
    }
}

android {
    namespace "com.balloman.expo.googlemaps"
    defaultConfig {
        versionCode 1
        versionName "1.0.0"
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.facebook.react:react-native:0.20.1"
    implementation "com.google.android.gms:play-services-maps:18.2.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.maps.android:android-maps-utils:3.8.0'
}
